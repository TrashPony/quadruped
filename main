// Настраиваем шину I2C
PrimaryI2C.setup({sda: SDA, scl: SCL, bitrate: 400000});
var mServo = require('@amperka/multiservo').connect(PrimaryI2C);

/////////////////////////////////////////Right legs////////////////////////////////
var rBotCenter    = mServo.connect(0); //+
var rFrontCenter  = mServo.connect(1); //+

var rBotMid       = mServo.connect(6); //+
var rFrontMid     = mServo.connect(7); //+

var rBotPalm      = mServo.connect(12); //-
var rFrontPalm    = mServo.connect(13); //-

/////////////////////////////////////////Left legs////////////////////////////////
var lBotCenter    = mServo.connect(2); //+
var lFrontCenter  = mServo.connect(3); //-+

var lBotMid       = mServo.connect(8); //-
var lFrontMid     = mServo.connect(9); //+

var lBotPalm      = mServo.connect(14); //-
var lFrontPalm    = mServo.connect(15);//+
//////////////////////////////////////////////////////////////////////////////////
var rBC=91,rFC=91,
    lBC=91,lFC=91,
    ////////
    rBM=91,rFM=91,
    lBM=91,lFM=91,
    ////////
    rBP=91,rFP=91,
    lBP=91,lFP=91;
////////////////
var allServo = [rBotCenter,rFrontCenter,rBotMid,rFrontMid,rBotPalm,rFrontPalm,
               lBotCenter,lFrontCenter,lBotMid,lFrontMid,lBotPalm,lFrontPalm];

function sleep(delay) {
  var start = new Date().getTime();
  while (new Date().getTime() < start + delay);
}

function writeServo(y,a,b,servo) {
  var flagY1 = false;
  var flagY2 = false;
  var flagY3 = false;
  var flagY4 = false;
  var flagA1 = false;
  var flagA2 = false;
  var flagA3 = false;
  var flagA4 = false;
  var flagB1 = false;
  var flagB2 = false;
  var flagB3 = false;
  var flagB4 = false;
  while( flagY1 !== true || flagA1 !== true || flagB1 !== true ||
         flagY2 !== true || flagA2 !== true || flagB2 !== true ||
         flagY3 !== true || flagA3 !== true || flagB3 !== true ||
         flagY3 !== true || flagA3 !== true || flagB3 !== true)
  {
    sleep(1);
/////////////////////////////////////////////////////////////////////////////
    if(rBC!==y[0]){
      if(rBC < y[0]){
        rBC++;
        rBotCenter.write(rBC);
      }
      if(rBC > y[0]){
        rBC--;
        rBotCenter.write(rBC);
      }
    } else {
        flagY1=true;
      }

    if(rFC!==y[1]){
      if(rFC < y[1]){
        rFC++;
        rFrontCenter.write((rFC-180) * (-1));
      }
      if(rFC > y[1]){
        rFC--;
        rFrontCenter.write((rFC-180) * (-1));
      }
    } else {
        flagY2=true;
      }

    if(lBC!==y[2]){
      if(lBC < y[2]){
        lBC++;
        lBotCenter.write((lBC-180) * (-1));
      }
      if(lBC > y[2]){
        lBC--;
        lBotCenter.write((lBC-180) * (-1));
      }
    } else {
        flagY3=true;
      }

    if(lFC!==y[3]){
      if(lFC < y[3]){
        lFC++;
        lFrontCenter.write(lFC);
      }
      if(lFC > y[3]){
        lFC--;
        lFrontCenter.write(lFC);
      }
    } else {
        flagY4=true;
      }
/////////////////////////////////////////////////////////////////////////////
    if(rBM!==a[0]){
      if(rBM < a[0]){
        rBM++;
        rBotMid.write(rBM);
      }
      if(rBM > a[0]){
        rBM--;
        rBotMid.write(rBM);
      }
    } else {
        flagA1=true;
      }

    if(rFM!==a[1]){
      if(rFM < a[1]){
        rFM++;
        rFrontMid.write((rFM-180) * (-1));
      }
      if(rFM > a[1]){
        rFM--;
        rFrontMid.write((rFM-180) * (-1));
      }
    } else {
        flagA2=true;
      }

    if(lBM!==a[2]){
      if(lBM < a[2]){
        lBM++;
        lBotMid.write((lBM-180) * (-1));
      }
      if(lBM > a[2]){
        lBM--;
        lBotMid.write((lBM-180) * (-1));
      }
    } else {
        flagA3=true;
      }

    if(lFM!==a[3]){
      if(lFM < a[3]){
        lFM++;
        lFrontMid.write(lFM);
      }
      if(lFM > a[3]){
        lFM--;
        lFrontMid.write(lFM);
      }
    } else {
        flagA4=true;
      }
/////////////////////////////////////////////////////////////////////////////
    if(rBP!==b[0]){
      if(rBP < b[0]){
        rBP++;
        rBotPalm.write(rBP);
      }
      if(rBP > b[0]){
        rBP--;
        rBotPalm.write(rBP);
      }
    } else {
        flagB1=true;
      }

    if(rFP!==b[1]){
      if(rFP < b[1]){
        rFP++;
        rFrontPalm.write((rFP-180) * (-1));
      }
      if(rFP > b[1]){
        rFP--;
        rFrontPalm.write((rFP-180) * (-1));
      }
    } else {
        flagB2=true;
      }

    if(lBP!==b[2]){
      if(lBP < b[2]){
        lBP++;
        lBotPalm.write(lBP);
      }
      if(lBP > b[2]){
        lBP--;
        lBotPalm.write(lBP);
      }
    } else {
        flagB3=true;
      }

    if(lFP!==b[3]){
      if(lFP < b[3]){
        lFP++;
        lFrontPalm.write(lFP);
      }
      if(lFP > b[3]){
        lFP--;
        lFrontPalm.write(lFP);
      }
    } else {
      flagB4=true;
    }
  }
}

function mathIK(x,y,zOffset){
  function getTanDeg(deg) {
    var rad = deg * Math.PI/180;
    return Math.tan(rad);
  }
  ////////////константы/////////////////
  var coxa    = 4; //(длина таза в см)
  var femur   = 5; //(длина бедра в см)
  var tibia   = 10.5; //(длина голени в см)
  ////////////константы/////////////////

  var xy    = x/y;
  var Y     = Math.atan(xy) * 180/Math.PI;
  var yProj = y/Math.cos(Y * Math.PI/180);
  var yCoxa = yProj-coxa;
  var L     = Math.sqrt(Math.pow(zOffset, 2) + Math.pow((yCoxa), 2));
  var a1    = Math.acos(zOffset/L) * 180/Math.PI;
  var b     = (Math.acos((Math.pow(femur, 2) + Math.pow(tibia, 2) - Math.pow(L, 2))/(2 * tibia * femur )) * 180/Math.PI);
  if(b < 0) b=b+180;
  var lamb  = (Math.acos((Math.pow(L, 2) + Math.pow(tibia, 2) - Math.pow(femur, 2))/(2 * tibia * L )) * 180/Math.PI);
  var a2    = 180 - (Math.abs(b)+lamb);
  var a     = a1+a2;

  if(x < 0) Y=Math.abs(Y)+90;

  var angle=[Math.round(Y),180-Math.round(a),Math.round(b)];
  return angle;
}

function sentAngle(leg1,leg2,leg3,leg4){
  legAngle1 = mathIK(leg1[0],leg1[1],leg1[2]);
  legAngle2 = mathIK(leg2[0],leg2[1],leg2[2]);
  legAngle3 = mathIK(leg3[0],leg3[1],leg3[2]);
  legAngle4 = mathIK(leg4[0],leg4[1],leg4[2]);

  y=[legAngle1[0],legAngle2[0],legAngle3[0],legAngle4[0]];
  a=[legAngle1[1],legAngle2[1],legAngle3[1],legAngle4[1]];
  b=[legAngle1[2],legAngle2[2],legAngle3[2],legAngle4[2]];

  console.log("leg1",legAngle1);
  console.log("leg2",legAngle2);
  console.log("leg3",legAngle3);
  console.log("leg4",legAngle4);
  console.log(getTime());

  writeServo(y,a,b,allServo);
  console.log("angle accept");
  sleep(10);
}
//Z 6,7,8,
function test(){
  console.log("in programm");
  //[x,y,z],[x,y,z],[x,y,z],[x,y,z]
  sentAngle([1,5,6],[1,5,6],[1,5,6],[1,5,6]);
  sentAngle([1,13,6],[1,13,6],[1,13,6],[1,13,6]);
  sentAngle([9,9,6],[9,9,6],[9,9,6],[9,9,6]);
  sentAngle([13,1,6],[13,1,6],[13,1,6],[13,1,6]);
  sentAngle([5,1,6],[5,1,6],[5,1,6],[5,1,6]);
}
setInterval(test,100);

















































